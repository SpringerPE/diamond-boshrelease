################################################################################
# Diamond Configuration File
################################################################################

################################################################################
### Options for the server
[server]
handlers = <% p("diamond.handlers", {}).each do |handler, options| %><%= handler %>,<% end %>

# User diamond will run as
# Leave empty to use the current user
user =

# Group diamond will run as
# Leave empty to use the current group
group =

# Pid file
pid_file = /var/vcap/sys/run/diamond/diamond.pid

# Directory to load collector modules from
collectors_path = /var/vcap/jobs/diamond/packages/diamond/share/diamond/collectors/

# Directory to load collector configs from
collectors_config_path = /var/vcap/jobs/diamond/config/collectors/

# Directory to load handler configs from
handlers_config_path = /var/vcap/jobs/diamond/config/handlers/
handlers_path = /var/vcap/jobs/diamond/packages/diamond/lib/python2.7/site-packages/diamond/handler

# Interval to reload collectors
collectors_reload_interval = 3600

# Number of seconds between each collector load
# collectors_load_delay = 1.0

# Maximum number of metrics waiting to be processed by handlers.
# When metric queue is full, new metrics are dropped.
metric_queue_size = 16384


################################################################################
### Options for handlers
[handlers]
# daemon logging handler(s)
keys = rotated_file

### Defaults options for all Handlers
[[default]]


<% p("diamond.handlers", {}).each do |handler, options| %>
[[<%= handler.split('.')[-1] %>]]
<% options.each do |key, value| %><%= key %> = <%= value %>
<% end %>
<% end %>


################################################################################
### Options for collectors
[collectors]

### Defaults options for all Collectors
[[default]]
# Uncomment and set to hardcode a hostname for the collector path
# Keep in mind, periods are seperators in graphite
# hostname = my_custom_hostname
<% if_p("diamond.collector.hostname") do |hostname| %>
hostname = <%= hostname %>
<% end %>

# If you prefer to just use a different way of calculating the hostname
# Uncomment and set this to one of these values:
# smart             = Default. Tries fqdn_short. If that's localhost, uses hostname_short
# fqdn_short        = Default. Similar to hostname -s
# fqdn              = hostname output
# fqdn_rev          = hostname in reverse (com.example.www)
# uname_short       = Similar to uname -n, but only the first part
# uname_rev         = uname -r in reverse (com.example.www)
# hostname_short    = `hostname -s`
# hostname          = `hostname`
# hostname_rev      = `hostname` in reverse (com.example.www)
# shell             = Run the string set in hostname as a shell command and use its
#                     output(with spaces trimmed off from both ends) as the hostname.
hostname_method = smart

# Path Prefix and Suffix
# you can use one or both to craft the path where you want to put metrics
# such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s
# path_prefix = servers
# path_suffix =
path_prefix = <%= p("diamond.collector.prefix", "servers") %>
path_suffix = <%= p("diamond.collector.suffix", "") %>

# Path Prefix for Virtual Machines
# If the host supports virtual machines, collectors may report per
# VM metrics. Following OpenStack nomenclature, the prefix for
# reporting per VM metrics is "instances", and metric foo for VM
# bar will be reported as: instances.bar.foo...
# instance_prefix = instances
instance_prefix = <%= p("diamond.collector.instance_prefix", "instances") %>

# Default Poll Interval (seconds)
interval = <%= p("diamond.collector.interval", "60") %>


################################################################################
# Default enabled collectors
################################################################################

<% p("diamond.collectors", {}).each do |collector, options| %>
[[<%= collector.split('.')[-1] %>]]
<% options.each do |key, value| %><%= key %> = <%= value %>
<% end %>
<% end %>

################################################################################
### Options for logging
# for more information on file format syntax:
# http://docs.python.org/library/logging.config.html#configuration-file-format

[loggers]
keys = root

[formatters]
keys = default

[logger_root]
# to increase verbosity, set DEBUG
level = <%= p("diamond.log_level", "INFO") %>
handlers = rotated_file
propagate = 1

[handler_rotated_file]
class = handlers.TimedRotatingFileHandler
formatter = default
# rotate at midnight, each day and keep 1 days
args = ('/var/vcap/sys/log/diamond/diamond.log', 'midnight', 1, 1)

[formatter_default]
format = [%(asctime)s] [%(threadName)s] %(message)s
datefmt = '%Y-%m-%d %H:%M:%S'


################################################################################
### Options for config merging
# [configs]
# path = "/etc/diamond/configs/"
# extension = ".conf"
#-------------------------------------------------------------------------------
# Example:
# /etc/diamond/configs/net.conf
# [collectors]
#
# [[NetworkCollector]]
# enabled = True
